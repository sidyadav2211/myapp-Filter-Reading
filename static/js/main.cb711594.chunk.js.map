{"version":3,"sources":["Firebase.js","App.js","Components/Show.js","Components/Create.js","Components/Edit.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","ref","collection","unsubscribe","state","Testing","isLoading","onCollectionUpdate","querySnapshot","forEach","doc","data","Name","FilterStart","FilterEnd","HeaterStart","HeaterEnd","TempIn","TempOut","push","key","id","setState","console","log","this","onSnapshot","className","role","to","map","val","moment","format","Component","Show","testing","delete","then","props","history","alert","catch","error","match","params","get","exists","onClick","bind","Create","changeHandle","e","target","name","value","submitHandle","preventDefault","add","onSubmit","htmlFor","type","onChange","placeholder","Edit","chnageHandle","set","docRef","Boolean","window","location","hostname","ReactDOM","render","basename","process","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.cb711594.chunk.js","sourcesContent":["\nimport firebase from 'firebase'\n\nconst config = {\n    apiKey: \"AIzaSyDgmyf7YYQnuQ10bBRx-tVo9yR2OpvoYak\",\n    authDomain: \"testing-ab37b.firebaseapp.com\",\n    databaseURL: \"https://testing-ab37b.firebaseio.com\",\n    projectId: \"testing-ab37b\",\n    storageBucket: \"testing-ab37b.appspot.com\",\n    messagingSenderId: \"162090644931\",\n    appId: \"1:162090644931:web:8ef05ceb3527e895a17976\",\n    measurementId: \"G-VR4VT1C596\"\n};\nconst firebaseApp = firebase.initializeApp(config);\n\nconst db = firebaseApp.firestore();\nexport { db };","import React, { Component } from 'react';\nimport { db } from './Firebase'\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\nimport './App.css';\n\n\nclass App extends Component {\n  ref = db.collection('Testing')\n  unsubscribe = null\n  state = {\n    Testing: [],\n    isLoading: false\n  }\n\n  onCollectionUpdate = (querySnapshot) => {\n    const Testing = []\n    querySnapshot.forEach((doc) => {\n      const { Name, FilterStart, FilterEnd, HeaterStart, HeaterEnd, TempIn, TempOut } = doc.data()\n      Testing.push({\n        key: doc.id,\n        doc,\n        Name,\n        FilterStart,\n        FilterEnd,\n        HeaterStart,\n        HeaterEnd,\n        TempIn,\n        TempOut\n      })\n    })\n    this.setState({\n      Testing,\n      isLoading: true\n    })\n    console.log(Testing)\n  }\n  componentDidMount() {\n\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n\n    // db.collection('Testing').get() //getting data\n    //   .then(querySnapshot => {\n\n    //     const testingData = querySnapshot.docs.map(doc => doc.data())\n\n\n    //     this.setState({\n    //       Testing: testingData,\n    //       isLoading: true\n    //     })\n    //     console.log('add', testingData)\n    //   })\n\n    // console.log('True')\n  }\n  componentWillUnmount() {\n    this.unsubscribe = null\n  }\n  render() {\n    const { Testing, isLoading } = this.state\n    return (\n      <div className=\"container-fluid\">\n        {isLoading ?\n          <div className='alert alert-success' role='alert'>Successfully loaded</div> :\n          <div className='alert alert-danger' role='alert'>No data Loading</div>\n        }\n        <div className='alert alert-'></div>\n        <div className='panel-default'>\n          <div className='panel panel-heading'>\n            <h1>Filter & Heater Reading</h1>\n          </div>\n          <div className='panel pane-body'>\n            <h3><Link to='/create' className='btn btn-info'>Add</Link></h3>\n            <div className='table table-responsive-sm'>\n              <table className='table table-striped'>\n\n                <thead>\n                  <tr>\n                    <th> Name</th>\n                    <th>FilterStart</th>\n                    <th>FilterEnd</th>\n                    <th>HeaterStart</th>\n                    <th>HeaterEnd</th>\n                    <th>TempIn</th>\n                    <th>TempOut</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Testing.map((val) =>\n                    <tr>\n                      <td key={val.id}><Link to={`/show/${val.key}`}>{val.Name}</Link></td>\n                      <td>{moment(val.FilterStart).format(\"MMMM Do YYYY, h:mm:ss a\")}</td>\n                      <td>{moment(val.FilterEnd).format(\"MMMM Do YYYY, h:mm:ss a\")}</td>\n                      <td>{moment(val.HeaterStart).format(\"MMMM Do YYYY, h:mm:ss a\")}</td>\n                      <td>{moment(val.HeaterEnd).format(\"MMMM Do YYYY, h:mm:ss a\")}</td>\n                      <td>{val.TempIn}</td>\n                      <td>{val.TempOut}</td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n\n          </div>\n        </div>\n\n\n\n        {/* {isLoading ? \"true\" : \"false\"} */}\n\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { db } from '../Firebase'\nimport moment from 'moment'\nclass Show extends Component {\n    state = {\n        testing: {},\n        key: '',\n\n    }\n\n    componentDidMount() {\n        const ref = db.collection('Testing').doc(this.props.match.params.id)\n        ref.get().then(doc => {\n            if (doc.exists) {\n                this.setState({\n                    testing: doc.data(),\n                    key: doc.id\n\n                })\n                console.log('Keys', doc.id)\n            } else {\n                console.log('No such data')\n            }\n        })\n    }\n    delete = (id) => {\n        db.collection('Testing').doc(id).delete().then(() => {\n            console.log('Delete data successfully!')\n            this.props.history.push('/')\n            alert('Deleted')\n        }).catch(error => {\n            console.log('Error removing data:', error)\n        })\n    }\n    render() {\n        console.log('Rendering show')\n        return (\n            <div className='container'>\n                <div className='panel panel-default'>\n                    <div className='panel-heading'>\n                        <h4><Link to='/' className='btn btn-info'>Go Back</Link></h4>\n                        <h3 className='panel=title'>\n                            {this.state.testing.Name}\n                        </h3>\n                    </div>\n                    <div className='panel-body'>\n                        <dl>\n                            <dt>FilterStart:</dt>\n                            <dd>{moment(this.state.testing.FilterStart).format(\"MMMM Do YYYY, h:mm:ss a\")}</dd>\n                            <dt>FilterEnd:</dt>\n                            <dd>{moment(this.state.testing.FilterEnd).format(\"MMMM Do YYYY, h:mm:ss a\")}</dd>\n                            <dt>HeaterStart:</dt>\n                            <dd>{moment(this.state.testing.HeaterStart).format(\"MMMM Do YYYY, h:mm:ss a\")}</dd>\n                            <dt>HeaterEnd:</dt>\n                            <dd>{moment(this.state.testing.HeaterEnd).format(\"MMMM Do YYYY, h:mm:ss a\")}</dd>\n                            <dt>TempIn:</dt>\n                            <dd>{this.state.testing.TempIn}</dd>\n                            <dt>TempOut</dt>\n                            <dd>{this.state.testing.TempOut}</dd>\n                        </dl>\n                        <Link to={`/edit/${this.state.key}`} className='btn btn-success'>Edit</Link>\n                        <button onClick={this.delete.bind(this, this.state.key)} className='btn btn-danger'>Delete</button>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\nexport default Show;","import React, { Component } from 'react'\nimport { db } from '../Firebase'\nimport { Link } from 'react-router-dom'\n// import moment from 'moment'\nclass Create extends Component {\n    state = {\n        Name: '',\n        FilterStart: '',\n        FilterEnd: '',\n        HeaterStart: '',\n        HeaterEnd: '',\n        TempIn: '',\n        TempOut: ''\n    }\n    changeHandle = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n        console.log('Values ')\n    }\n    submitHandle = (e) => {\n        e.preventDefault()\n        db.collection('Testing').add({\n            Name: this.state.Name,\n            FilterStart: this.state.FilterStart,\n            FilterEnd: this.state.FilterEnd,\n            HeaterStart: this.state.HeaterStart,\n            HeaterEnd: this.state.HeaterEnd,\n            TempIn: this.state.TempIn,\n            TempOut: this.state.TempOut\n        }).then(() => {\n            this.setState({\n                Name: '',\n                FilterStart: '',\n                HeaterStart: '',\n                FilterEnd: '',\n                HeaterEnd: '',\n                TempIn: '',\n                TempOut: ''\n            })\n            this.props.history.push('/')\n            alert('Data submited')\n        }).catch(error => {\n            console.log('Error While loading Doc', error)\n        })\n\n\n    }\n\n    render() {\n\n        return (\n            <div className='container'>\n                <div className='panel panel-default'>\n                    <div className='panel-heading'>\n                        <h3 className='panel-title'>Add New Reading</h3>\n                    </div>\n                    <div className='panel-body'>\n                        <h4><Link to='/' className='btn btn-info'>Go Back</Link></h4>\n                        <form onSubmit={this.submitHandle}>\n                            <div className='form-group'>\n                                <label htmlFor='Name'>Name:</label>\n                                <input type='text' value={this.state.Name} name='Name' onChange={this.changeHandle}\n                                    placeholder='Name' id='Name' className='form-control' />\n                            </div>\n\n                            <div className='form-group'>\n                                <label htmlFor='FilterStart'>FilterStart:</label>\n                                <input type='datetime-local' value={this.state.FilterStart}\n                                    onChange={this.changeHandle} name='FilterStart' id='FilterStart'\n                                    className='form-control' />\n\n                            </div>\n                            <div className='form-group'>\n                                <label htmlFor=\"FilterEnd\">FilterEnd:</label>\n                                <input type='datetime-local'\n                                    value={this.state.FilterEnd}\n                                    onChange={this.changeHandle} className='form-control' name='FilterEnd' id='FilterEnd'\n\n                                />\n\n                            </div>\n                            <div className='form-group'>\n                                <label htmlFor='HeaterStart'>HeaterStart:</label>\n                                <input type='datetime-local'\n                                    value={this.state.HeaterStart}\n                                    onChange={this.changeHandle}\n                                    className='form-control' name='HeaterStart' id='HeaterStart' />\n\n                            </div>\n                            <div className='form-group'>\n                                <label htmlFor='HeaterEnd'>HeaterEnd:</label>\n                                <input type='datetime-local'\n                                    value={this.state.HeaterEnd} onChange={this.changeHandle}\n                                    name='HeaterEnd' className='form-control' id='HeaterEnd' />\n\n                            </div>\n                            <div className='form-group'>\n                                <label htmlFor='TempIn'>TempIn:</label>\n                                <input type='number' value={this.state.TempIn} name='TempIn' onChange={this.changeHandle}\n                                    className='form-control' id='TempIn' />\n                            </div>\n                            <div className='form-group'>\n                                <label htmlFor='TempOut'>TempOut</label>\n                                <input type='number' value={this.state.TempOut} name='TempOut' onChange={this.changeHandle}\n                                    className='form-control' id='TempOut' />\n                            </div>\n                            <button type='submit' className='btn btn-primary'>Submit</button>\n                        </form>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\nexport default Create;","import React, { Component } from 'react'\nimport { db } from '../Firebase'\nimport { Link } from 'react-router-dom'\n\n\nclass Edit extends Component {\n    state = {\n        key: '',\n        Name: '',\n        FilterStart: '',\n        FilterEnd: '',\n        HeaterStart: '',\n        HeaterEnd: '',\n        TempIn: '',\n        TempOut: ''\n\n    }\n    componentDidMount() {\n        const ref = db.collection('Testing').doc(this.props.match.params.id)\n        ref.get().then((doc) => {\n            if (doc.exists) {\n                const testing = doc.data()\n                console.log('Geting Data', doc.data)\n                this.setState({\n                    key: doc.id,\n                    Name: testing.Name,\n                    FilterStart: testing.FilterStart,\n                    FilterEnd: testing.HeaterEnd,\n                    HeaterStart: testing.HeaterStart,\n                    HeaterEnd: testing.HeaterEnd,\n                    TempIn: testing.TempIn,\n                    TempOut: testing.TempOut\n                })\n            } else {\n                console.log(\"No Such Documents\")\n            }\n        })\n    }\n    chnageHandle = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    submitHandle = (e) => {\n        e.preventDefault()\n        const { Name, FilterStart, FilterEnd, HeaterStart, HeaterEnd, TempIn, TempOut } = this.state\n        const updateRef = db.collection('Testing').doc(this.state.key)\n        updateRef.set({\n            Name,\n            FilterStart,\n            FilterEnd,\n            HeaterStart,\n            HeaterEnd,\n            TempIn,\n            TempOut\n        }).then((docRef) => {\n            this.setState({\n                key: '',\n                Name: '',\n                FilterStart: '',\n                FilterEnd: '',\n                HeaterStart: '',\n                HeaterEnd: '',\n                TempIn: '',\n                TempOut: '',\n            })\n            this.props.history.push(\"/show/\" + this.props.match.params.id)\n        })\n            .catch(error => {\n                console.log(\"Error adding Documents :\", error);\n\n            })\n    }\n    render() {\n        return (\n            <div className='container'>\n                <div className='panel panel-default'>\n                    <div className='panel-heading'>\n\n                        <h3 className='panel-title'>Edit</h3>\n                    </div>\n                    <div className='panel-body'>\n                        <h4><Link to={`/show/${this.state.key}`} className='btn btn-info'>Go Back</Link></h4>\n                        <form onSubmit={this.submitHandle}>\n                            <div className='form-goup'>\n                                <label htmlFor='Name'>Name:</label>\n                                <input type='text' name='Name' value={this.state.Name}\n                                    onChange={this.chnageHandle} className='form-control' id='Name' />\n                            </div>\n                            <div className='form-goup'>\n                                <label htmlFor='FilterStart'>FilterStart:</label>\n                                <input type='datetime-local' name='FilterStart' value={this.state.FilterStart}\n                                    onChange={this.chnageHandle} className='form-control' id='FilterStart'\n                                />\n\n                            </div>\n                            <div className='form-goup'>\n                                <label htmlFor='FilterEnd'>FilterEnd</label>\n                                <input type='datetime-local' name='FilterEnd' value={this.state.FilterEnd}\n                                    onChange={this.chnageHandle} className='form-control' id='FilterEnd'\n                                />\n\n                            </div>\n                            <div className='form-goup'>\n                                <label htmlFor='HeaterStart'>HeaterStart</label>\n                                <input type='datetime-local' name='HeaterStart' value={this.state.HeaterStart}\n                                    onChange={this.chnageHandle} className='form-control' id='HeaterStart'\n                                />\n\n                            </div>\n                            <div className='form-goup'>\n                                <label htmlFor='HeaterEnd'>HeaterEnd</label>\n                                <input type='datetime-local' name='HeaterEnd' value={this.state.HeaterEnd}\n                                    onChange={this.chnageHandle} className='form-control' id='HeaterEnd'\n                                />\n\n                            </div>\n                            <div className='form-goup'>\n                                <label htmlFor='TempIn'>TempIn</label>\n                                <input type='number' name='TempIn' value={this.state.TempIn}\n                                    onChange={this.chnageHandle} className='form-control' id='TempIn' />\n                            </div>\n                            <div className='form-goup'>\n                                <label htmlFor='TempOut'>TempOut</label>\n                                <input type='number' placeholder='Temperature' name='TempOut' value={this.state.TempOut}\n                                    onChange={this.chnageHandle} className='form-control' id='TempOut' />\n                            </div>\n                            <br />\n                            <button type='submit' className='btn btn-primary'>Submit</button>\n                        </form>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\nexport default Edit;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\nimport App from './App';\nimport Show from './Components/Show'\nimport Create from './Components/Create.js'\nimport Edit from './Components/Edit'\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <Route exact path='/' component={App} />\n    <Route path='/create' component={Create} />\n    <Route path=\"/show/:id\" component={Show} />\n    <Route path='/edit/:id' component={Edit} />\n\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}