{"version":3,"sources":["Firebase.js","Components/Stop.js","Components/Data.js","App.js","Components/Show.js","Components/Create.js","Components/Edit.js","Components/Create1.js","serviceWorker.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","FacebookAuthProvider","Stop","state","activePage","ShowData","collection","limit","get","then","querysnapShot","stop","docs","map","doc","data","console","log","setState","handleChangePages","pageNumber","orderBy","handleChangePages1","p","handleChangePages2","handleChangePages3","handleChangePages4","this","className","res","key","Name","moment","FilterEnd","format","HeaterEnd","TempIn","TempOut","onClick","value","Component","Data","ref","unsubscribe","Testing","isLoading","onCollectionUpdate","querySnapshot","forEach","FilterStart","HeaterStart","push","id","handlerPageChange1","p1","testing","handlerPageChange2","p2","handlerPageChange3","p3","handlerPageChange4","p4","handlerPageChange5","p5","onSnapshot","role","to","val","App","isSignedIn","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","callbacks","signInSuccessWithAuthResult","componentDidMount","unregisterAuthObserver","onAuthStateChanged","user","style","float","margin","signOut","textAlign","fontStyle","currentUser","displayName","firebaseAuth","Show","delete","props","history","alert","catch","error","match","params","exists","bind","Create","changeHandle","e","target","name","submitHandle","preventDefault","add","onSubmit","htmlFor","type","onChange","placeholder","Edit","chnageHandle","set","docRef","Create1","Boolean","window","location","hostname","ReactDOM","render","basename","process","exact","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a5c1a5ec.chunk.js","sourcesContent":["\nimport firebase from 'firebase'\n\nconst config = {\n    apiKey: \"AIzaSyDgmyf7YYQnuQ10bBRx-tVo9yR2OpvoYak\",\n    authDomain: \"testing-ab37b.firebaseapp.com\",\n    databaseURL: \"https://testing-ab37b.firebaseio.com\",\n    projectId: \"testing-ab37b\",\n    storageBucket: \"testing-ab37b.appspot.com\",\n    messagingSenderId: \"162090644931\",\n    appId: \"1:162090644931:web:8ef05ceb3527e895a17976\",\n    measurementId: \"G-VR4VT1C596\"\n};\nconst firebaseApp = firebase.initializeApp(config);\n\nconst db = firebaseApp.firestore();\n// db.settings({ timestampsInSnapshots: true })\nconst firebaseAuth = firebaseApp.auth()\nconst facebook = new firebase.auth.FacebookAuthProvider()\nexport { firebaseAuth, db, facebook }","import React, { Component } from 'react'\nimport { db } from '../Firebase'\nimport moment from 'moment'\n\n\n// import Pagination from 'react-js-pagination'\n\n\nclass Stop extends Component {\n    state = {\n        Stop: [],\n        activePage: 1,\n\n\n\n\n    }\n    ShowData = () => {\n        db.collection('Stop').limit(6).get()\n            .then(querysnapShot => {\n                const stop = querysnapShot.docs.map(doc => doc.data())\n                console.log(stop)\n                this.setState({\n                    Stop: stop,\n                    activePage: this.state.activePage\n\n                })\n\n\n            })\n\n    }\n\n    componentDidMount() {\n        this.ShowData()\n\n    }\n    handleChangePages = (pageNumber) => {\n        db.collection('Stop').orderBy('Name').limit(7).get()\n            .then(querysnapShot => {\n                const stop = querysnapShot.docs.map(doc => doc.data())\n\n                console.log(stop)\n                console.log('Page number is', pageNumber)\n                this.setState({\n                    Stop: stop,\n                    activePage: pageNumber\n                })\n            })\n    }\n    //Change page while clcik a button\n    handleChangePages1 = (p) => {\n        db.collection('Stop').limit(20).get()\n            .then(querysnapShot => {\n                const stop = querysnapShot.docs.map(doc => doc.data())\n                if (stop) {\n                    this.setState({\n                        Stop: stop,\n                        activePage: p\n                    })\n                } else {\n                    console.log('Not found ')\n                }\n            })\n    }\n    //Second button chnage\n    handleChangePages2 = (p) => {\n        db.collection('Stop').limit(40).get()\n            .then(querysnapShot => {\n                const stop = querysnapShot.docs.map(doc => doc.data())\n                if (stop) {\n                    this.setState({\n                        Stop: stop,\n                        activePage: p\n                    })\n                } else {\n                    console.log('Not found ')\n                }\n            })\n    }\n    //THird button change\n    handleChangePages3 = (p) => {\n        db.collection('Stop').limit(60).get()\n            .then(querysnapShot => {\n                const stop = querysnapShot.docs.map(doc => doc.data())\n                if (stop) {\n                    this.setState({\n                        Stop: stop,\n                        activePage: p\n                    })\n                } else {\n                    console.log('Not found ')\n                }\n            })\n    }\n    //Change button four\n    handleChangePages4 = (p) => {\n        db.collection('Stop').limit(20).get()\n            .then(querysnapShot => {\n                const stop = querysnapShot.docs.map(doc => doc.data())\n                if (stop) {\n                    this.setState({\n                        Stop: stop,\n                        activePage: p\n                    })\n                } else {\n                    console.log('Not found ')\n                }\n            })\n    }\n    render() {\n        const { Stop } = this.state\n        // const styles = {\n        //     backgroundColor: 'White',\n        //     color: 'Red',\n\n        // }\n\n        return (\n            <div className='container'>\n                <h3>End Reading</h3>\n                <div className='table table-responsive-sm'>\n                    <table className=\"table table-striped\" >\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>FilterEnd</th>\n                                <th>HeaterEnd</th>\n                                <th>TempIn</th>\n                                <th>TempOut</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {Stop.map(res =>\n                                <tr>\n                                    <td key={res}>{res.Name}</td>\n                                    <td>{moment(res.FilterEnd).format(\"MMMM Do YYYY, h:mm:ss a\")}</td>\n                                    <td>{moment(res.HeaterEnd).format(\"MMMM Do YYYY, h:mm:ss a\")}</td>\n                                    <td>{res.TempIn}</td>\n                                    <td>{res.TempOut}</td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n\n\n                {/* List Group */}\n                {/* {Stop.map(res =>\n\n                    <ul key={res.id} className='list-group'>\n                        <li className='list-group-item active'>{res.Name}</li>\n                        <li className='list-group-item'>{moment(res.FilterEnd).format(\"MMMM Do YYYY, h:mm:ss a\")}</li>\n                        <li className='list-group-item'>{moment(res.HeaterEnd).format(\"MMMM Do YYYY, h:mm:ss a\")}</li>\n                        <li className='list-group-item'>{res.TempIn}</li>\n                        <li className='list-group-item'>{res.TempOut}</li>\n                        <br />\n                    </ul>\n\n                )\n\n                } */}\n\n\n                {/* <nav className='Page navigation '>\n                    <ul className='pagination justify-content-end'>\n                        <li className='page-item disabled'>\n                            <Link to='#' className='page-link'>Previous</Link>\n                        </li>\n                        <li className='page-item'><Link to='#' className='page-link'>1</Link></li>\n\n                        <li className='page-item'><Link to='#' className='page-link'>2</Link></li>\n\n                        <li className='page-item'><Link to='#' className='page-link'>3</Link></li>\n                        <li className='page-item'><Link to='#' className='page-link'>Next</Link></li>\n                    </ul>\n                </nav> */}\n\n                {/* <div >\n                    <Pagination\n                        itemClass=\"page-item\"\n                        linkClass=\"page-link\"\n                        activePage={this.state.activePage}\n                        itemsCountPerPage={2}\n\n                        totalItemsCount={450}\n                        pageRangeDisplayed={5}\n                        onChange={this.handleChangePages.bind(this)}\n                    />\n                </div>\n                <h3>SId</h3> */}\n                <button onClick={this.handleChangePages} value={this.state.activePage} className=\"btn btn-outline-primary\">1</button>\n                <button onClick={this.handleChangePages1} value={this.state.activePage} className=\"btn btn-outline-primary\">2</button>\n                <button onClick={this.handleChangePages2} value={this.state.activePage} className=\"btn btn-outline-primary\">3</button>\n                <button onClick={this.handleChangePages3} value={this.state.activePage} className=\"btn btn-outline-primary\">4</button>\n                <button onClick={this.handleChangePages4} value={this.state.activePage} className=\"btn btn-outline-primary\">5</button>\n            </div >\n        )\n    }\n\n\n}\nexport default Stop;","import React, { Component } from 'react'\nimport { db } from '../Firebase'\nimport { Link } from 'react-router-dom'\nimport moment from 'moment'\nimport Stop from './Stop'\n\nclass Data extends Component {\n    ref = db.collection('Testing').limit(5)\n    unsubscribe = null\n    state = {\n        Testing: [],\n        isLoading: false,\n        activePage: 1\n    }\n    onCollectionUpdate = (querySnapshot) => {\n        const Testing = []\n        querySnapshot.forEach((doc) => {\n            const { Name, FilterStart, HeaterStart, TempIn, TempOut } = doc.data()\n            Testing.push({\n                key: doc.id,\n                doc,\n                Name,\n                FilterStart,\n\n                HeaterStart,\n\n                TempIn,\n                TempOut\n            })\n        })\n        this.setState({\n            Testing,\n            isLoading: true\n        })\n        console.log(Testing)\n    }\n\n    componentDidMount() {\n\n        this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n\n        // db.collection('Testing').get() //getting data\n        //   .then(querySnapshot => {\n\n        //     const testingData = querySnapshot.docs.map(doc => doc.data())\n\n\n        //     this.setState({\n        //       Testing: testingData,\n        //       isLoading: true\n        //     })\n        //     console.log('add', testingData)\n        //   })\n\n        // console.log('True')\n    }\n    componentWillUnmount() {\n        this.unsubscribe = null\n    }\n    // handleSign = () => {\n\n\n    //   firebaseAuth.signOut()\n    //   console.log('successfull')\n\n\n\n\n    // }\n    //Button enter Change the page\n    handlerPageChange1 = (p1) => {\n        db.collection('Testing').limit(10).get()\n            .then(querySnapshot => {\n                const testing = querySnapshot.docs.map(doc => doc.data())\n                if (testing) {\n                    this.setState({\n                        Testing: testing,\n                        activePage: p1\n                    })\n                } else {\n                    console.log('Data not found')\n                }\n            })\n    }\n    handlerPageChange2 = (p2) => {\n        db.collection('Testing').limit(30).get()\n            .then(querySnapshot => {\n                const testing = querySnapshot.docs.map(doc => doc.data())\n                if (testing) {\n                    this.setState({\n                        Testing: testing,\n                        activePage: p2\n                    })\n                } else {\n                    console.log('Data not found')\n                }\n            })\n    }\n    handlerPageChange3 = (p3) => {\n        db.collection('Testing').limit(80).get()\n            .then(querySnapshot => {\n                const testing = querySnapshot.docs.map(doc => doc.data())\n                if (testing) {\n                    this.setState({\n                        Testing: testing,\n                        activePage: p3\n                    })\n                } else {\n                    console.log('Data not found')\n                }\n            })\n    }\n    handlerPageChange4 = (p4) => {\n        db.collection('Testing').limit(200).get()\n            .then(querySnapshot => {\n                const testing = querySnapshot.docs.map(doc => doc.data())\n                if (testing) {\n                    this.setState({\n                        Testing: testing,\n                        activePage: p4\n                    })\n                } else {\n                    console.log('Data not found')\n                }\n            })\n    }\n    handlerPageChange5 = (p5) => {\n        db.collection('Testing').limit(500).get()\n            .then(querySnapshot => {\n                const testing = querySnapshot.docs.map(doc => doc.data())\n                if (testing) {\n                    this.setState({\n                        Testing: testing,\n                        activePage: p5\n                    })\n                } else {\n                    console.log('Data not found')\n                }\n            })\n    }\n\n    render() {\n        const { Testing, isLoading } = this.state\n\n        return (\n\n            <div className=\"container\">\n\n                {isLoading ?\n                    <div className='alert alert-success' role='alert'>Successfully loaded</div> :\n                    <div className='alert alert-danger' role='alert'>No data Loading</div>\n                }\n                {/* <button onClick={() => firebaseAuth.signOut()} className='btn btn-primary'\n          style={{ float: \"right\", margin: '10px' }}>Sign Out</button> */}\n                <div className='panel-default'>\n                    <div className='panel panel-heading'>\n                        <h1>Filter & Heater Reading</h1>\n                    </div>\n                    <div className='panel pane-body'>\n                        <h3><Link to='/create' className='btn btn-info'>Start</Link></h3>\n\n\n\n                        <div className='table table-responsive-sm'>\n                            <table className='table table-striped'>\n\n                                <thead>\n                                    <tr>\n                                        <th> Name</th>\n                                        <th>FilterStart</th>\n\n                                        <th>HeaterStart</th>\n\n                                        <th>TempIn</th>\n                                        <th>TempOut</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {Testing.map((val, id) =>\n                                        <tr>\n                                            <td key={id}><Link to={`/show/${val.key}`}>{val.Name}</Link></td>\n                                            <td>{moment(val.FilterStart).format(\"MMMM Do YYYY, h:mm:ss a\")}</td>\n\n                                            <td>{moment(val.HeaterStart).format(\"MMMM Do YYYY, h:mm:ss a\")}</td>\n\n                                            <td>{val.TempIn}</td>\n                                            <td>{val.TempOut}</td>\n                                        </tr>\n                                    )}\n                                </tbody>\n                            </table>\n\n                        </div>\n                        <button className='btn btn-outline-primary' onClick={this.handlerPageChange1}\n                            value={this.state.activePage}>1</button>\n                        <button className='btn btn-outline-primary' onClick={this.handlerPageChange2}\n                            value={this.state.activePage}>2</button>\n                        <button className='btn btn-outline-primary' onClick={this.handlerPageChange3}\n                            value={this.state.activePage}>3</button>\n                        <button className='btn btn-outline-primary' onClick={this.handlerPageChange4}\n                            value={this.state.activePage}>4</button>\n                        <button className='btn btn-outline-primary' onClick={this.handlerPageChange5}\n                            value={this.state.activePage}>5</button>\n                    </div>\n                </div>\n\n\n\n                {/* {isLoading ? \"true\" : \"false\"} */}\n                <h3><Link to='/create1' className='btn btn-info'>End</Link></h3>\n                <Stop />\n\n            </div>\n        )\n    }\n\n}\nexport default Data;","import React, { Component } from 'react';\nimport firebase from 'firebase'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\nimport Data from './Components/Data'\nimport './App.css';\n\n\nclass App extends Component {\n  state = { isSignedIn: false }\n  uiConfig = {\n    signInFlow: 'popup',\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n      firebase.auth.EmailAuthProvider.PROVIDER_ID\n    ],\n    callbacks: {\n\n      signInSuccessWithAuthResult: () => false\n    }\n\n  }\n  componentDidMount = () => {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => {\n\n      this.setState({\n        isSignedIn: !!user\n      })\n      console.log('name:', user)\n    })\n  }\n  componentWillUnmount() {\n    this.unregisterAuthObserver()\n  }\n  render() {\n    return (\n      <div className='App'>\n        {this.state.isSignedIn ? (\n\n          <span >\n            <button className='btn btn-primary' style={{ float: 'right', margin: '3px' }} onClick={() => firebase.auth().signOut()}>Sign Out</button>\n            <h1 style={{ textAlign: 'center', fontStyle: 'bold' }}>Welcome {firebase.auth().currentUser.displayName}!</h1>\n\n\n\n            <Data />\n          </span>\n\n        ) : (\n            <StyledFirebaseAuth\n              uiConfig={this.uiConfig}\n              firebaseAuth={firebase.auth()} />\n          )}\n\n      </div>\n    )\n  }\n\n}\n\nexport default App;\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { db } from '../Firebase'\nimport moment from 'moment'\nclass Show extends Component {\n    state = {\n        testing: {},\n        key: '',\n\n    }\n\n    componentDidMount() {\n        const ref = db.collection('Testing').doc(this.props.match.params.id)\n        ref.get().then(doc => {\n            if (doc.exists) {\n                this.setState({\n                    testing: doc.data(),\n                    key: doc.id\n\n                })\n                console.log('Keys', doc.id)\n            } else {\n                console.log('No such data')\n            }\n        })\n    }\n    delete = (id) => {\n        db.collection('Testing').doc(id).delete().then(() => {\n            console.log('Delete data successfully!')\n            this.props.history.push('/')\n            alert('Deleted')\n        }).catch(error => {\n            console.log('Error removing data:', error)\n        })\n    }\n    render() {\n        console.log('Rendering show')\n        return (\n            <div className='container'>\n                <div className='panel panel-default'>\n                    <div className='panel-heading'>\n                        <h4><Link to='/' className='btn btn-info'>Go Back</Link></h4>\n                        <h3 className='panel=title'>\n                            {this.state.testing.Name}\n                        </h3>\n                    </div>\n                    <div className='panel-body'>\n                        <dl>\n                            <dt>FilterStart:</dt>\n                            <dd>{moment(this.state.testing.FilterStart).format(\"MMMM Do YYYY, h:mm:ss a\")}</dd>\n\n                            <dt>HeaterStart:</dt>\n                            <dd>{moment(this.state.testing.HeaterStart).format(\"MMMM Do YYYY, h:mm:ss a\")}</dd>\n\n                            <dt>TempIn:</dt>\n                            <dd>{this.state.testing.TempIn}</dd>\n                            <dt>TempOut</dt>\n                            <dd>{this.state.testing.TempOut}</dd>\n                        </dl>\n                        <Link to={`/edit/${this.state.key}`} className='btn btn-success'>Edit</Link>\n                        <button onClick={this.delete.bind(this, this.state.key)} className='btn btn-danger'>Delete</button>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\nexport default Show;","import React, { Component } from 'react'\nimport { db } from '../Firebase'\nimport { Link } from 'react-router-dom'\n// import moment from 'moment'\nclass Create extends Component {\n    state = {\n        Name: '',\n        FilterStart: '',\n\n        HeaterStart: '',\n\n        TempIn: '',\n        TempOut: ''\n    }\n    changeHandle = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n        console.log('Values ')\n    }\n    submitHandle = (e) => {\n        e.preventDefault()\n        db.collection('Testing').add({\n            Name: this.state.Name,\n            FilterStart: this.state.FilterStart,\n\n            HeaterStart: this.state.HeaterStart,\n\n            TempIn: this.state.TempIn,\n            TempOut: this.state.TempOut\n        }).then(() => {\n            this.setState({\n                Name: '',\n                FilterStart: '',\n\n                FilterEnd: '',\n\n                TempIn: '',\n                TempOut: ''\n            })\n            this.props.history.push('/')\n            alert('Data submited')\n        }).catch(error => {\n            console.log('Error While loading Doc', error)\n        })\n\n\n    }\n\n    render() {\n\n        return (\n            <div className='container'>\n                <div className='panel panel-default'>\n                    <div className='panel-heading'>\n                        <h3 className='panel-title'>Add New Reading</h3>\n                    </div>\n                    <div className='panel-body'>\n                        <h4><Link to='/' className='btn btn-info'>Go Back</Link></h4>\n                        <form onSubmit={this.submitHandle}>\n                            <div className='form-group'>\n                                <label htmlFor='Name'>Name:</label>\n                                <input type='text' value={this.state.Name} name='Name' onChange={this.changeHandle}\n                                    placeholder='Name' id='Name' className='form-control' />\n                            </div>\n\n                            <div className='form-group'>\n                                <label htmlFor='FilterStart'>FilterStart:</label>\n                                <input type='datetime-local' value={this.state.FilterStart}\n                                    onChange={this.changeHandle} name='FilterStart' id='FilterStart'\n                                    className='form-control' />\n\n                            </div>\n\n                            <div className='form-group'>\n                                <label htmlFor='HeaterStart'>HeaterStart:</label>\n                                <input type='datetime-local'\n                                    value={this.state.HeaterStart}\n                                    onChange={this.changeHandle}\n                                    className='form-control' name='HeaterStart' id='HeaterStart' />\n\n                            </div>\n\n\n                            <div className='form-group'>\n                                <label htmlFor='TempIn'>TempIn:</label>\n                                <input type='number' value={this.state.TempIn} name='TempIn' onChange={this.changeHandle}\n                                    className='form-control' id='TempIn' />\n                            </div>\n                            <div className='form-group'>\n                                <label htmlFor='TempOut'>TempOut</label>\n                                <input type='number' value={this.state.TempOut} name='TempOut' onChange={this.changeHandle}\n                                    className='form-control' id='TempOut' />\n                            </div>\n                            <button type='submit' className='btn btn-primary'>Submit</button>\n                        </form>\n                    </div>\n                </div>\n\n            </div >\n        )\n    }\n}\nexport default Create;","import React, { Component } from 'react'\nimport { db } from '../Firebase'\nimport { Link } from 'react-router-dom'\n\n\nclass Edit extends Component {\n    state = {\n        key: '',\n        Name: '',\n        FilterStart: '',\n\n        HeaterStart: '',\n\n        TempIn: '',\n        TempOut: ''\n\n    }\n    componentDidMount() {\n        const ref = db.collection('Testing').doc(this.props.match.params.id)\n        ref.get().then((doc) => {\n            if (doc.exists) {\n                const testing = doc.data()\n                console.log('Geting Data', doc.data)\n                this.setState({\n                    key: doc.id,\n                    Name: testing.Name,\n                    FilterStart: testing.FilterStart,\n\n                    HeaterStart: testing.HeaterStart,\n\n                    TempIn: testing.TempIn,\n                    TempOut: testing.TempOut\n                })\n            } else {\n                console.log(\"No Such Documents\")\n            }\n        })\n    }\n    chnageHandle = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n    submitHandle = (e) => {\n        e.preventDefault()\n        const { Name, FilterStart, HeaterStart, TempIn, TempOut } = this.state\n        const updateRef = db.collection('Testing').doc(this.state.key)\n        updateRef.set({\n            Name,\n            FilterStart,\n\n            HeaterStart,\n\n            TempIn,\n            TempOut\n        }).then((docRef) => {\n            this.setState({\n                key: '',\n                Name: '',\n                FilterStart: '',\n\n                HeaterStart: '',\n\n                TempIn: '',\n                TempOut: '',\n            })\n            this.props.history.push(\"/show/\" + this.props.match.params.id)\n        })\n            .catch(error => {\n                console.log(\"Error adding Documents :\", error);\n\n            })\n    }\n    render() {\n        return (\n            <div className='container'>\n                <div className='panel panel-default'>\n                    <div className='panel-heading'>\n\n                        <h3 className='panel-title'>Edit</h3>\n                    </div>\n                    <div className='panel-body'>\n                        <h4><Link to={`/show/${this.state.key}`} className='btn btn-info'>Go Back</Link></h4>\n                        <form onSubmit={this.submitHandle}>\n                            <div className='form-goup'>\n                                <label htmlFor='Name'>Name:</label>\n                                <input type='text' name='Name' value={this.state.Name}\n                                    onChange={this.chnageHandle} className='form-control' id='Name' />\n                            </div>\n                            <div className='form-goup'>\n                                <label htmlFor='FilterStart'>FilterStart:</label>\n                                <input type='datetime-local' name='FilterStart' value={this.state.FilterStart}\n                                    onChange={this.chnageHandle} className='form-control' id='FilterStart'\n                                />\n\n                            </div>\n\n                            <div className='form-goup'>\n                                <label htmlFor='HeaterStart'>HeaterStart</label>\n                                <input type='datetime-local' name='HeaterStart' value={this.state.HeaterStart}\n                                    onChange={this.chnageHandle} className='form-control' id='HeaterStart'\n                                />\n\n                            </div>\n\n                            <div className='form-goup'>\n                                <label htmlFor='TempIn'>TempIn</label>\n                                <input type='number' name='TempIn' value={this.state.TempIn}\n                                    onChange={this.chnageHandle} className='form-control' id='TempIn' />\n                            </div>\n                            <div className='form-goup'>\n                                <label htmlFor='TempOut'>TempOut</label>\n                                <input type='number' placeholder='Temperature' name='TempOut' value={this.state.TempOut}\n                                    onChange={this.chnageHandle} className='form-control' id='TempOut' />\n                            </div>\n                            <br />\n                            <button type='submit' className='btn btn-primary'>Submit</button>\n                        </form>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\nexport default Edit;","import React, { Component } from 'react'\nimport { db } from '../Firebase'\nimport { Link } from 'react-router-dom'\n// import moment from 'moment'\nclass Create1 extends Component {\n    state = {\n        Name: '',\n        FilterEnd: '',\n        HeaterEnd: '',\n        TempIn: '',\n        TempOut: ''\n    }\n    changeHandle = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n        console.log('Values ')\n    }\n    submitHandle = (e) => {\n        e.preventDefault()\n        db.collection('Stop').add({\n            Name: this.state.Name,\n            FilterEnd: this.state.FilterEnd,\n\n            HeaterEnd: this.state.HeaterEnd,\n            TempIn: this.state.TempIn,\n            TempOut: this.state.TempOut\n        }).then(() => {\n            this.setState({\n\n                Name: '',\n                FilterEnd: '',\n                HeaterEnd: '',\n                TempIn: '',\n                TempOut: ''\n            })\n            this.props.history.push('/')\n            alert('Data submited')\n        }).catch(error => {\n            console.log('Error While loading Doc', error)\n        })\n\n\n    }\n\n    render() {\n\n        return (\n            <div className='container'>\n                <div className='panel panel-default'>\n                    <div className='panel-heading'>\n                        <h3 className='panel-title'>End New Reading</h3>\n                    </div>\n                    <div className='panel-body'>\n                        <h4><Link to='/' className='btn btn-info'>Go Back</Link></h4>\n                        <form onSubmit={this.submitHandle}>\n\n\n                            <div className='form-group'>\n                                <label htmlFor='Name'>Name:</label>\n                                <input type='text' name='Name' id='Name'\n                                    value={this.state.Name} onChange={this.changeHandle}\n                                    className='form-control' />\n                            </div>\n                            <div className='form-group'>\n                                <label htmlFor=\"FilterEnd\">FilterEnd:</label>\n                                <input type='datetime-local'\n                                    value={this.state.FilterEnd}\n                                    onChange={this.changeHandle} className='form-control' name='FilterEnd' id='FilterEnd'\n\n                                />\n\n                            </div>\n\n                            <div className='form-group'>\n                                <label htmlFor='HeaterEnd'>HeaterEnd:</label>\n                                <input type='datetime-local'\n                                    value={this.state.HeaterEnd} onChange={this.changeHandle}\n                                    name='HeaterEnd' className='form-control' id='HeaterEnd' />\n\n                            </div>\n                            <div className='form-group'>\n                                <label htmlFor='TempIn'>TempIn:</label>\n                                <input type='number' value={this.state.TempIn} name='TempIn' onChange={this.changeHandle}\n                                    className='form-control' id='TempIn' />\n                            </div>\n                            <div className='form-group'>\n                                <label htmlFor='TempOut'>TempOut</label>\n                                <input type='number' value={this.state.TempOut} name='TempOut' onChange={this.changeHandle}\n                                    className='form-control' id='TempOut' />\n                            </div>\n                            <button type='submit' className='btn btn-primary'>Submit</button>\n                        </form>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\nexport default Create1;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\nimport App from './App';\nimport Show from './Components/Show'\nimport Create from './Components/Create.js'\nimport Edit from './Components/Edit'\n// import Login from './Components/Login'\n// import { AuthProvider } from './Components/Auth'\n// import Signup from './Components/SignUp'\nimport Create1 from './Components/Create1'\n// import PrivateRoute from './Components/PrivateRoute'\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n  <Router basename={process.env.PUBLIC_URL}>\n    <Route exact path='/' component={App} />\n    <Route path='/create' component={Create} />\n    <Route path='/create1' component={Create1} />\n    {/* <Route path='/login' component={Login} /> */}\n    {/* <Route path='/signup' component={Signup} /> */}\n    <Route path=\"/show/:id\" component={Show} />\n\n    <Route path='/edit/:id' component={Edit} />\n\n  </Router>\n  // </AuthProvider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}